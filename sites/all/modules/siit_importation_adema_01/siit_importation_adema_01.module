<?php

/**
* @file
* Display a Adema Importation formulaire
*/

	function siit_importation_adema_01_menu(){
    $items = array();
    $items['siit_importation_adema_01'] = array(
        'title'            => t('Formulaire importation'), 
        'page callback'    => 'drupal_get_form',
        'page arguments' => array('siit_importation_adema_01_form'),
        'access arguments' => array('access siit_importation_adema_01'),
        'type'             => MENU_LOCAL_TASK,
    		//'access callback' => TRUE,
    );
    
    return $items;
    
}  

function siit_importation_adema_01_permission() {
  return array( 
    'access siit_importation_adema_01' => array(
      'title' => t('siit_importation_adema_01 : adema importation formulaire'),
      'description' => t('Perform administration tasks for Adema importation formulaire.'),
    ),
  );
}



function siit_importation_adema_01_form($form, &$form_state) {
	
	    if(!isset($form_state['storage']['confirm'])){			 
	        return get_siit_importation_adema_01_form($form, $form_state);
	    }
        else{
			
			if(!empty($_POST['annee']) && !empty($_POST['mois'])){
				//Controle si un import validé existe déjà
				list($id_importation,$question) = searchDataExist(ENTITE_ADEMA, $_POST['annee'], $_POST['mois'], STATUT_AVALIDER, false);
			}
	
			
            if($id_importation){
                  $path = 'siit_importation_adema_01';
                  $description = '';
                  $yes = 'Oui';
                  $no = 'Non';
                  $form = confirm_form($form, $question, $path, $description, $yes, $no);
                  $form['annee'] = array('#type' => 'hidden', '#value' => $_POST['annee']);
				  $form['mois'] = array('#type' => 'hidden', '#value' => $_POST['mois']);
                  $form['csv_file'] = array('#type' => 'hidden', '#value' => $_POST['csv_file']);
                  $form['chemin'] = array('#type' => 'hidden', '#value' => $form_state['storage']['uri']);
                  $form['actions']['submit'] = array(
                    '#type' => 'submit',
                    '#value' => $yes,
                    '#attributes' => array('class' => array('button button--primary js-form-submit form-submit btn-success btn'),),
            	    '#submit' => array('csv_import_adema_01_submit'),
                  );  
                  $form['#attached']['css'] = array(
                      drupal_get_path('module', 'siit_importation_adema_01') . '/css/adema.css'
                  );
                  return $form;
            }
            else csv_import_adema_01_submit($form, $form_state);
        }
	

	
}

function get_siit_importation_adema_01_form($form, &$form_state){
	
	drupal_set_title(t('Formulaire ADEMA'));
	
	$options = optionYear();
	$form['annee'] = array(
    "#type" => "select",   
    '#default_value' => date("Y"),   
    "#title" => t("Année :"),
    "#options" => $options,
    "#required" => TRUE,
	);
	
	
	$form["mois"] = array(
    "#type" => "select",      
    "#title" => t("Mois :"),
    "#options" => optionMonth(false),
    "#required" => TRUE,
    );

	$form['importation']["template"] = array(
	    "#markup" => "Cliquez ici pour télécharger un exemple de <a href='sites/default/files/templates/SIIT_ADEMA.xlsx' target='_blank'>template</a>",      
	    );
	    
	$form['importation']['csv_file'] = array(
	        '#title' => 'Importer Fichier :', // Titre dans la page d'importation du fichier
	        '#description' => 'Seuls ces fichiers xlsx sont valides.',
	        '#type' => 'managed_file',
	        '#required' => true,
	        '#upload_validators' => array(
	            'file_validate_extensions' => array("xlsx"),
	        ),
	    );
	    
	 $form['importation']['submit'] = array(
	        '#type' => 'submit',
	        '#value' => t('Process'),
	        '#attributes' => array('class' => array('button button--primary js-form-submit form-submit btn-success btn'),),
            '#validate' => array('csv_import_adema_01_validate'),
	    		'#submit' => array('csv_import_adema_01_submit'),
	    );
	    
	    
	$form['importation']['back'] = array('#type' => 'submit', '#value' => t('Retour'));
    $form['importation']['back']['#submit'] = array('siit_back_submit');
    $form['importation']['back']['#limit_validation_errors'] = array();
    $form['importation']['back']['#name'] = 'back';

	$form['#attributes']['class'][] = 'import-form';
	
	return $form;
}

function csv_import_adema_01_validate($form, &$form_state){
	
    global $libMois;
    
    if(!empty($_POST['annee']) && !empty($_POST['mois'])){
		//Controle si un import validé existe déjà
		list($id_importation,$question) = searchDataExist(ENTITE_ADEMA, $_POST['annee'], $_POST['mois'], STATUT_VALIDE, false);
	}
    
    
    
    if($form_state['values']['csv_file']){
        $file = file_load($form_state['values']['csv_file']);
        $uri = $file->uri;
        $path = drupal_realpath($uri);
        try {
            $inputFileType = PHPExcel_IOFactory::identify($path);
            $objReader = PHPExcel_IOFactory::createReader($inputFileType);
            $objPHPExcel = $objReader->load($path);
        } catch (Exception $e) {
            
        }
        $annee = $_POST['annee'];
        $mois = $_POST['mois'];
        
        
        foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
            $highestRow         = $worksheet->getHighestRow(); 
            $highestColumn      = $worksheet->getHighestColumn(); 
            $highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
            for ($row = 1; $row <= $highestRow; ++ $row) {
                for ($col = 0; $col < $highestColumnIndex; ++ $col) {
                    $cell = $worksheet->getCellByColumnAndRow($col, $row);
                    $val = $cell->getValue();
					if($row==1 && $col==0){//A6
                        if($val!=="ADEMA"){
                            form_set_error('edit-conforme'.$row, t("Fichier non conforme."));
							return;
                        }
                    }
					
                    if($row==6 && $col==0){//A6
                        if($annee!=$val && "Année ".$annee!=$val){
                            form_set_error('edit-annee'.$row , t("L'année sélectionnée ".$annee." est différente de ".getCellule($row, $col)."=".$val));							
                        }
                    } 
                    else if($row == 15 || $row == 31 || $row == 47 || 
                    	$row == 66 || $row == 82 || $row == 98 || $row == 117 || $row == 133 || 
                    	$row == 149 ) {
                    	if($col==$mois && $col>0){
                    		controle_libelle_mois('edit-code'.$row,$val,$row,$col);
                    	}
                    }
                    else if(($row>=16 && $row<=27) || ($row>=32 && $row<=43) || ($row>=48 && $row<=59) 
                    		|| ($row>=67 && $row<=78) || ($row>=83 && $row<=94)
                    		|| ($row>=99 && $row<=110) || ($row>=118 && $row<=129) || ($row>=134 && $row<=145) 
                    		|| ($row>=150 && $row<=161) ){
							
                        if($col==0){
                            $id_aeroport = get_id_aeroport($val);
                            if(!$id_aeroport){
                                form_set_error('edit-code'.$row, t("Le code aéroport ".$val." (".getCellule($row, $col).") est introuvable dans la base."));
                            }
                        }
                        else if($col==$mois){
                            if($val){
                            	controle_error_int('edit-valeur'.$row,$val,$row, $col);
						
                                /*if(!filter_var($val, FILTER_VALIDATE_INT)){
                                    form_set_error('edit-valeur'.$row, t($val." n'est pas un entier (".getCellule($row, $col).") ."));
                                }*/
                            }
                            
                            if (is_null($val)) {
								form_set_error('edit-valeur'.$row, t($val." n'est pas un entier (".getCellule($row, $col).") ."));
							}
                            
                            
							$nb_pax = $worksheet->getCellByColumnAndRow($col, $row+275)->getValue();
							if($nb_pax){
								controle_error_int('edit-valeur'.$row,$nb_pax,$row+275, $col);
								
                                /*if(!filter_var($nb_pax, FILTER_VALIDATE_INT)){
                                    form_set_error('edit-valeur'.$row, t($nb_pax." n'est pas un entier (".getCellule($row+275, $col).") ."));
                                }*/
                            }
                            if ($nb_pax == '') {
							//	form_set_error('edit-valeur'.$row, t($nb_pax." n'est pas un entier (".getCellule($row+275, $col).") ."));
							}
							
                        }
                    }
                    $lastVal = $val;
                }
            }
        }
    }
}

function csv_import_adema_01_submit($form, &$form_state){

	if(!isset($form_state['storage']['confirm'])) {
		
		list($id_importation,$question) = searchDataExist(ENTITE_ADEMA, $_POST['annee'], $_POST['mois'], STATUT_VALIDE, true) ;
		
        if($id_importation){
            $form_state['storage']['confirm'] = TRUE;
            $form_state['rebuild'] = TRUE;
            $form_state['storage']['csv_file'] = $form_state['values']['csv_file'];
            $file = file_load($form_state['values']['csv_file']);
            $form_state['storage']['uri'] = $file->uri;
        } else {
            $file = file_load($form_state['values']['csv_file']);
            traitement_adema01($file->uri,$form_state);
        }
    } else {
        if(isset($_POST["chemin"])) $chemin = $_POST["chemin"];
        else{
            $file = file_load($form_state['values']['csv_file']);
            $chemin = $file->uri;
        }
        traitement_adema01($chemin,$form_state);
    }



}

function traitement_adema01($chemin,&$form_state){
	
    if($form_state['values']['csv_file']){

		$path = drupal_realpath($chemin);
		try {
			$inputFileType = PHPExcel_IOFactory::identify($path);
			$objReader = PHPExcel_IOFactory::createReader($inputFileType);
			$objPHPExcel = $objReader->load($path);
		} catch (Exception $e) {
			
		}
		$annee = $_POST['annee'];
		$mois = $_POST['mois'];
		controleDoublonImportation($annee, $mois,ENTITE_ADEMA);
		$data = array();
		$data['annee'] = $annee;$data['id_mois'] = $mois;
		$data["li_fichier"] = basename($path);$data["id_statut"] = STATUT_AVALIDER;$data["id_type_fichier"] = TYPE_FICHIER_ADEMA;
		$id_importation = insert_importation($data);
		$data = array();
		
		foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
				$highestRow         = $worksheet->getHighestRow(); 
				$highestColumn      = $worksheet->getHighestColumn(); 
				$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
				for ($row = 6; $row <= $highestRow; ++ $row) {
					for ($col = 0; $col < $highestColumnIndex; ++ $col) {
						$cell = $worksheet->getCellByColumnAndRow($col, $row);
						$val = $cell->getValue();
						if(($row>=16 && $row<=27) || ($row>=32 && $row<=43) || ($row>=48 && $row<=59) || ($row>=67 && $row<=78) || ($row>=83 && $row<=94) || 
						    ($row>=99 && $row<=110) || ($row>=118 && $row<=129) || ($row>=134 && $row<=145) || ($row>=150 && $row<=161)){
							if($col==0){
								$id_aeroport = get_id_aeroport($val);
							}
							else if($col==$mois){
								if($val){
									$data = array();
									$data['annee'] = $annee;$data['id_mois'] = $col;$data['id_aeroport'] = $id_aeroport;
									if($row<=59)$data['id_type_vol'] = 1;
									else if($row<=110)$data['id_type_vol'] = 2;
									else $data['id_type_vol'] = 3;
									$data['nb_vols'] = $val;
									$data['nb_passagers'] = $worksheet->getCellByColumnAndRow($col, $row+275)->getValue();
									if(($row>=16 && $row<=27)  || ($row>=67 && $row<=78)  || ($row>=118 && $row<=129) )$data['id_arrivee_depart'] = 1;
									else if(($row>=32 && $row<=43)|| ($row>=83 && $row<=94) || ($row>=134 && $row<=145))$data['id_arrivee_depart'] = 2;
									else $data['id_arrivee_depart'] = 3;
									$data['id_importation'] = $id_importation;
									import_data_adema($data);
								}
								
							}
						}
						$lastVal = $val;
					}
				}
			}
			
		drupal_set_message("L'import a été effectué avec succès.", $type = 'status');
		$form_state['redirect'] ="siit_importation_liste";
	}
}
