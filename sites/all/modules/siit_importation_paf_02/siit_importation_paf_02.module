<?php


include_once drupal_get_path('module', 'libraries') . '/PHPExcel.php';
include_once drupal_get_path('module', 'libraries') . '/PHPExcel/IOFactory.php';

ini_set('xdebug.var_display_max_depth', -1);
ini_set('xdebug.var_display_max_children', -1);
ini_set('xdebug.var_display_max_data', -1);



/**
* @file
* Display a Adema Importation formulaire
*/

function siit_importation_paf_02_menu(){
    $items = array();
    $items['siit_importation_paf_02'] = array(
        'title'            => t('Importation des données de la PAF Nosy Be'), 
        'page callback'    => 'drupal_get_form',
        'page arguments' => array('siit_importation_paf_02_form'),
        'access arguments' => array('access siit_importation_paf_02'),
        'type'             => MENU_LOCAL_TASK,
    		//'access callback' => TRUE,
    );
    
    return $items;
    
}  

function siit_importation_paf_02_permission() {
  return array( 
    'access siit_importation_paf_02' => array(
      'title' => t('siit_importation_paf_02 : paf02 importation formulaire'),
      'description' => t('Perform administration tasks for paf02 importation.'),
    ),
  );
}

function siit_importation_paf_02_form($form, &$form_state) {
	
		if(!isset($form_state['storage']['confirm'])){			 
	        return get_siit_importation_paf_02_form($form, $form_state);
	    }
        else{
        		//Si on sait qu'il existe un import avec statut diff de validé, on vérifie si il en existe un qui est à valider !
            list($id_importation,$question) = searchDataExist(ENTITE_PAF02, $_POST['annee'], $_POST['mois'], STATUT_AVALIDER, false);
			
            if($id_importation){
            		//Si il en existe un à valider, on va poser la question
            	  	 drupal_get_messages('error'); //Reset les messages
                  $path = 'siit_importation_paf_02';
                  $description = '';
                  $yes = 'Oui';
                  $no = 'Non';
                  $form = confirm_form($form, $question, $path, $description, $yes, $no);
                  $form['annee'] = array('#type' => 'hidden', '#value' => $_POST['annee']);
				  $form['mois'] = array('#type' => 'hidden', '#value' => $_POST['mois']);
                  $form['csv_file'] = array('#type' => 'hidden', '#value' => $_POST['csv_file']);
                  $form['chemin'] = array('#type' => 'hidden', '#value' => $form_state['storage']['uri']);
                  $form['actions']['submit'] = array(
                    '#type' => 'submit',
                    '#value' => $yes,
                    '#attributes' => array('class' => array('button button--primary js-form-submit form-submit btn-success btn'),),
            	    '#submit' => array('csv_import_paf_02_submit'),
                  );  
                  $form['#attached']['css'] = array(
                      drupal_get_path('module', 'siit_importation_paf_02') . '/css/paf02.css'
                  );
                  return $form;
            }
            else csv_import_paf_02_submit($form, $form_state);
        }

	
}

function get_siit_importation_paf_02_form($form, &$form_state){
		
	drupal_set_title(t('Importation des données de la PAF Nosy Be'));
	
	$options = optionYear();
	$form['annee'] = array(
	    "#type" => "select",      
	    "#title" => t("Année :"),
	    "#options" => $options,
	    //"#default_value" => $settings[""],
	    "#required" => TRUE,
		);
	
	$form["mois"] = array(
	    "#type" => "select",      
	    "#title" => t("Mois :"),
	    "#options" => optionMonth(false),
	    "#required" => TRUE,
	    //"#description" => t("La ville de depart de la carte ?"),
	    );

    
    $form["aeroport"] = array(
	    "#type" => "select",      
	    "#title" => t("Aéroport d'arrivée :"),
	    "#options" => get_all_aeroport(false, 3),
	    "#default_value" => "3",
	    "#required" => TRUE,
	    );
		
    $form['importation']["template"] = array(
	    "#markup" => "Cliquez ici pour télécharger un exemple de <a href='sites/default/files/templates/SIIT_PAF_02.xlsx' target='_blank'>template</a>",      
	    );
	    
	$form['importation']['csv_file'] = array(
	        '#title' => 'Importer Fichier', // Titre dans la page d'importation du fichier
	        '#description' => 'Seuls ces fichiers csv, xlsx et xls sont valides.',
	        '#type' => 'managed_file',
	        '#required' => true,
	        '#upload_validators' => array(
	            'file_validate_extensions' => array('csv xlsx xls'),
	        ),
	    );
	    
	 $form['importation']['submit'] = array(
	        '#type' => 'submit',
	        '#value' => t('Process'),
	        '#attributes' => array('class' => array('button button--primary js-form-submit form-submit btn-success btn'),),
			'#validate' => array('csv_import_paf_02_validate'),
	    		'#submit' => array('csv_import_paf_02_submit'),
	    );
	    
	    
	$form['importation']['back'] = array('#type' => 'submit', '#value' => t('Retour'));
    $form['importation']['back']['#submit'] = array('siit_back_submit');
    $form['importation']['back']['#limit_validation_errors'] = array();
    $form['importation']['back']['#name'] = 'back';

	$form['#attributes']['class'][] = 'import-form';
	
	return $form;
}

function csv_import_paf_02_validate($form, &$form_state) {
	
	$nb_pax=0;$is_resident=0;$nb_pax_non_res=0;$nb_pax_resident=0;
	$annee=0;$id_mois=0;$nb_pax_total=0;
	$passee = false;
	
	if(!empty($_POST['annee']) && !empty($_POST['mois'])){
		//Controle si un import validé existe déjà
		list($id_importation,$question) = searchDataExist(ENTITE_PAF02, $_POST['annee'], $_POST['mois'], STATUT_VALIDE, false);
	}
	
	$annee_form  = $form_state['values']['annee'];
	$mois_form = $form_state['values']['mois'];
	
	if($form_state['values']['csv_file']){
		
		$file = file_load($form_state['values']['csv_file']);
        $uri = $file->uri;
        $path = drupal_realpath($uri);
        try {
            $inputFileType = PHPExcel_IOFactory::identify($path);
            $objReader = PHPExcel_IOFactory::createReader($inputFileType);
            $objPHPExcel = $objReader->load($path);
        } catch (Exception $e) {
            
        }
		
		foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
       
			$highestRow         = $worksheet->getHighestRow(); 
			$highestColumn      = $worksheet->getHighestColumn(); 
			$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
			
			//drupal_set_message(t($highestRow."ligne ".$highestColumnIndex), $type = '', $repeat = FALSE);
			
			for ($row = 1; $row <= $highestRow;  $row++) {
				for ($col = 0; $col < $highestColumnIndex;  $col++) {  
					$cell = $worksheet->getCellByColumnAndRow($col, $row);
					
					if($row == 1 &&  $col == 0 ){
						$champs_annee = $cell->getValue();
						//drupal_set_message(t("$col, $row"."champs_annee = ".$champs_annee), $type = '', $repeat = true);
						
						if($champs_annee != "ANNEE"){
							form_set_error('edit-annee', t("Fichier non conforme."));
							return;
						}
						
						$annee = $worksheet->getCellByColumnAndRow($col+1, $row)->getValue();
						if($annee_form!=$annee) {
						  form_set_error('edit-annee_form', t("L'année saisie '$annee_form' et celle du fichier '$annee' sont différentes."));
						  //return;
						}
						
					}
					
					if($row == 1 &&  $col == 4 ){
						$mois = $worksheet->getCellByColumnAndRow($col, $row)->getValue();
						
						$id_mois = get_id_mois($mois);
						
						if($id_mois==0){
							form_set_error('edit-mois', t("Le champs 'Mois' du fichier contient une erreur."));
							//return;
						}else if(trim(strtolower($mois_form))!=trim(strtolower($id_mois)) ) {
							$li_mois = get_lib_mois($id_mois);
							form_set_error('edit-mois_form', t("Le mois saisi et celui du fichier (".$li_mois.") sont différents."));
							
						}
						
					}
					
					if($row == 3 &&  $col == 5 ){
						$nb_pax_total = $worksheet->getCellByColumnAndRow($col+2, $row)->getValue();
						controle_error_int('edit-nb-total'.$row,$nb_pax_total,$row, $col+2, "Le nombre total des passagers");
						
						/*if (!is_numeric($nb_pax_total) ){
							form_set_error('edit-total', t("Le nombre total des passagers '". $nb_pax_total."' n'est pas un chiffre.(".getCellule($row, $col+2).")"));	
						}*/
						//drupal_set_message(t("nb_pax total debarqué".$nb_pax), $type = '', $repeat = true);
						
						
					}else
					//recuperer total non resident par nationalite
					if($row >= 5 &&  $col == 5 ){
					    $cell = $worksheet->getCellByColumnAndRow($col, $row)->getValue(); 
						
						if(!empty($cell)){
						     //drupal_set_message(t("Rcell->getValue()".$cell->getValue()), $type = '', $repeat = true);
							 if( $cell == "RESIDENTS"){
								$nb_pax_resident = $worksheet->getCellByColumnAndRow($col+2, $row)->getValue();
								controle_error_int('edit-nb-total-res'.$row,$nb_pax_total,$row, $col+2, "Le nombre de passagers résidents");
								//if (!is_numeric($nb_pax_resident) ){
								//	form_set_error('edit-resident', t("Le nombre de passagers résidents '$nb_pax_resident' n'est pas un chiffre.(".getCellule($row, $col+2).")"));	
								//}
								//drupal_set_message(t("RESIDENTS nb_pax".$nb_pax), $type = '', $repeat = true);
								
							} else if($cell == "NON RESIDENTS"){
								$nb_pax_non_res = $worksheet->getCellByColumnAndRow($col+2, $row)->getValue();
								controle_error_int('edit-nb-total-non-res'.$row,$nb_pax_total,$row, $col+2, "Le nombre de passagers non résidents");
								//if (!is_numeric($nb_pax_non_res) ){
								//	form_set_error('edit-nb-nonres', t("Le nombre de passagers non résidents '$nb_pax_non_res' n'est pas un chiffre. (".getCellule($row, $col+2).")"));	
								//}
							} else {
								
								$nat = $cell;
								$nb_pax_tmp = $worksheet->getCellByColumnAndRow($col+2, $row)->getValue();
								$res = controle_error_int('edit-nb-total-non-res'.$row,$nb_pax_tmp,$row, $col+2, "Le nombre de passagers");
								if ($res) {
									$nb_pax = $nb_pax_tmp+$nb_pax;
								}
								/*if (!is_numeric($nb_pax_tmp) ){
									drupal_set_message(t("Le nombre de passagers '$nb_pax_tmp' n'est pas un chiffre. (".getCellule($row, $col+2).")"), $type = 'error', $repeat = true);	
								}else {
									$nb_pax = $nb_pax_tmp+$nb_pax;
								}*/
								
								$id_nationalite = get_id_nationalite($nat ,ENTITE_PAF02);
								if($id_nationalite==0){
									drupal_set_message(t("La nationalité '$nat' n'existe pas en base. (".getCellule($row, $col).")"), $type = 'error', $repeat = true);
								}
								//GET nombre pax /nationalite
							}
						}
					}
				}
			}
			break;
		}
		
		//drupal_set_message(t(' Set data: nb_pax_total'.$nb_pax_total."| nb_pax_resident ".$nb_pax_resident.
		//	 "| nb_pax_non_res".$nb_pax_non_res."| nb_pax".$nb_pax), $type = '', $repeat = true);
		
		//Test des totaux 	 
		if($nb_pax_non_res!=$nb_pax){
			form_set_error('edit-tot-nonres', t("Le total des nombre de passagers non résidents calculé '".$nb_pax."' n'est pas conforme la somme de '$nb_pax_non_res' dans le fichier."));	
		}
		
		$nb_pax_total_tmp = $nb_pax_non_res + $nb_pax_resident;
		if($nb_pax_total!= $nb_pax_total_tmp){
		   form_set_error('edit-tot-nonres', t("Le total global de passagers calculé '".$nb_pax_total_tmp."' n'est pas conforme la somme de '$nb_pax_total' dans le fichier."));	
		}		
	}	
}


function csv_import_paf_02_submit($form, &$form_state){
	
	if(!isset($form_state['storage']['confirm'])) {
		//Vérifie si existe avec un statut diff de valide
        list($id_importation,$question) = searchDataExist(ENTITE_PAF02, $_POST['annee'], $_POST['mois'], STATUT_VALIDE, true) ;
		
        if($id_importation){
        		//Si oui, on va repartir sur le form initial
            $form_state['storage']['confirm'] = TRUE;
            $form_state['rebuild'] = TRUE;
            $form_state['storage']['csv_file'] = $form_state['values']['csv_file'];
            $file = file_load($form_state['values']['csv_file']);
            $form_state['storage']['uri'] = $file->uri;
        } else {
            $file = file_load($form_state['values']['csv_file']);
            traitement_paf_02($file->uri,$form_state);
        }
    } else {
        if(isset($_POST["chemin"])) $chemin = $_POST["chemin"];
        else{
            $file = file_load($form_state['values']['csv_file']);
            $chemin = $file->uri;
        }
        traitement_paf_02($chemin,$form_state);
    }


}

function traitement_paf_02($chemin, &$form_state){
	
	$nb_pax=0;$is_resident=0;$nb_pax_non_res=0;$nb_pax_resident=0;
	$annee=0;$id_mois=0;$nb_pax_total=0;
	$passee = false;
	
	if($form_state['values']['csv_file']){
		
		$annee_form  = $form_state['values']['annee'];
		$mois_form = $form_state['values']['mois'];
		
		//if($form_state['values']['csv_file']){
						
			$path = drupal_realpath($chemin);
			try {
				$inputFileType = PHPExcel_IOFactory::identify($path);
				$objReader = PHPExcel_IOFactory::createReader($inputFileType);
				$objPHPExcel = $objReader->load($path);
			} catch (Exception $e) {
				
			}
			
			foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
		   
				$highestRow         = $worksheet->getHighestRow(); 
				$highestColumn      = $worksheet->getHighestColumn(); 
				$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
				
				//drupal_set_message(t($highestRow."ligne ".$highestColumnIndex), $type = '', $repeat = FALSE);
				
				for ($row = 1; $row <= $highestRow; ++ $row) {
					for ($col = 0; $col < $highestColumnIndex; ++ $col) {  
							//$cell = $worksheet->getCellByColumnAndRow($col, $row);
						if($row == 1 &&  $col == 0 ){
							
							$annee = $worksheet->getCellByColumnAndRow($col+1, $row)->getValue();
							$mois = $worksheet->getCellByColumnAndRow($col+4, $row)->getValue();
							
							$id_mois = get_id_mois($mois);
							
							//drupal_set_message(t("id mois".$id_mois), $type = '', $repeat = true);
							
						}
						
						if($row == 3 &&  $col == 5 && $passee==false){
							$nb_pax = $worksheet->getCellByColumnAndRow($col+2, $row)->getValue();
							$id_nationalite = 0;
							$is_resident = 3;
							$passee = true;
							//drupal_set_message(t("nb_pax total debarqué".$nb_pax), $type = '', $repeat = true);
							
							
						}else
						//recuperer total non resident par nationalite
						if($row >= 5 &&  $col == 5 ){
							$cell = $worksheet->getCellByColumnAndRow($col, $row)->getValue(); 
							
							if(!empty( $cell )){
								 //drupal_set_message(t("Rcell->getValue()".$cell->getValue()), $type = '', $repeat = true);
								 if( $cell == "RESIDENTS"){
									$nb_pax = $worksheet->getCellByColumnAndRow($col+2, $row)->getValue();
									$id_nationalite = 0;
									$is_resident = 1;
									//drupal_set_message(t("RESIDENTS nb_pax".$nb_pax), $type = '', $repeat = true);
									
								}else if( $cell == "NON RESIDENTS"){
									$nb_pax = $worksheet->getCellByColumnAndRow($col+2, $row)->getValue();
									$id_nationalite = 0;
									$is_resident = 0;
									//drupal_set_message(t("NON RESIDENTS nb_pax".$nb_pax), $type = '', $repeat = true);
								}else{
									$nat = $cell;
									$nb_pax_tmp = $worksheet->getCellByColumnAndRow($col+2, $row)->getValue();
									$id_nationalite = get_id_nationalite($nat ,ENTITE_PAF02);
									//drupal_set_message(t("id_nationalite".$id_nationalite), $type = '', $repeat = true);
									
									//GET nombre pax /nationalite
									$nb_pax = $nb_pax_tmp;
									$is_resident = 0;
									//drupal_set_message(t("nb_pax".$nb_pax), $type = '', $repeat = true);
								}
							}else{//ne pas sauver les espaces vides
								$id_nationalite =0;
								$nb_pax=0;
							}
						}
					}
					
					//Recuperer les donnees row!=4 car vide
					if($annee!="" && $nb_pax!="" && $id_mois!=0 && $row!=4){
						//drupal_set_message(t(' Set data: annee'.$annee."| id_mois ".$id_mois."| id_nationalite".$id_nationalite
						//."| is_resident".$is_resident."| nb_pax".$nb_pax), $type = '', $repeat = true);
						$data[] = array(						  
							'annee' => $annee,					
							'id_mois' => $id_mois,	
							'id_aeroport' => 3,
							'id_arrivee_depart' => 1,
							'id_nationalite' =>  $id_nationalite,							
							'is_resident' => $is_resident,
							'nb_pax' => $nb_pax
						);									
						
					}
				}
				break;
			}
			
			//UPDATE AND SAVE	 
			//INSERTION siit_importation
			
			// rechecher importation avec dt_import et li_fichier et id_type_fichier
				$data_import = array();
				$data_import['annee'] = $annee_form;
				$data_import['id_mois'] = $mois_form;;
				$data_import["li_fichier"] = basename($path);
				$data_import["id_statut"] = STATUT_AVALIDER;
				$data_import["id_type_fichier"] = TYPE_FICHIER_PAF02;
				
			//On supprime l'importation existante pour l'équivalent
				controleDoublonImportation($annee,$id_mois,ENTITE_PAF02);
				$id_importation = insert_importation($data_import);
				
				foreach ($data as $value) {				
					insert_passager_paf_02($value,$id_importation);			
				}
			
				drupal_set_message("L'import a été effectué avec succès.", $type = 'status');
				$form_state['redirect'] ="siit_importation_liste";
			
		//}
	}
}
	
function insert_passager_paf_02($value,$id_importation){

			db_insert('siit_passager_global')
					->fields(array('annee', 'is_resident', 'id_nationalite', 
						'id_mois', 'id_aeroport', 'id_arrivee_depart', 'nb_pax', 'id_importation'))
					->values(array(			
						'annee' => $value["annee"],					
						'id_mois' => $value["id_mois"],
						'id_aeroport' => $value["id_aeroport"],
						'id_arrivee_depart' => $value["id_arrivee_depart"],
						'id_nationalite' => $value["id_nationalite"],
						'is_resident' => $value["is_resident"],
						'nb_pax' => $value["nb_pax"],	        		
						'id_importation' => $id_importation,
							))
			->execute();	
}		


