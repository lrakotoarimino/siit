<?php

/**
* @file
* Display a CNAPS Importation formulaire
*/

define('REG_ATSIMO_ATSINANANA','atsimoatsinanana');
define('REG_ATSIMO_ANDREFANA','atsimoandrefana');
define('REG_VATOVAVY_FITOVINANY','vatovavyfitovinany');
define('REG_ALAOTRA_MANGORO','alaotramangoro');
define('REG_AMORON_I_MANIA','amoronimania');



	function siit_importation_cnaps_01_menu(){
    $items = array();
    $items['siit_importation_cnaps_01'] = array(
        'title'            => t('Formulaire importation'), 
        'page callback'    => 'drupal_get_form',
        'page arguments' => array('siit_importation_cnaps_01_form'),
        'access arguments' => array('access siit_importation_cnaps_01'),
        'type'             => MENU_LOCAL_TASK,
    		//'access callback' => TRUE,
    );
    
    return $items;
    
}  

function siit_importation_cnaps_01_permission() {
  return array( 
    'access siit_importation_cnaps_01' => array(
      'title' => t('siit_importation_cnaps_01 : cnaps importation formulaire'),
      'description' => t('Perform administration tasks for Cnaps importation formulaire.'),
    ),
  );
}

function siit_importation_cnaps_01_form($form, &$form_state) {
		
		
        if(!isset($form_state['storage']['confirm'])){			 
	        return get_siit_importation_cnaps_01_form($form, $form_state);
	    }
        else{
        
        	list($id_importation,$question) = searchDataExist(ENTITE_CNAPS01, $_POST['annee'], 0, STATUT_AVALIDER, false);
			
			
            if($id_importation){
                  $path = 'siit_importation_cnaps_01';
                  $description = '';
                  $yes = 'Oui';
                  $no = 'Non';
                  $form = confirm_form($form, $question, $path, $description, $yes, $no);
                  $form['annee'] = array('#type' => 'hidden', '#value' => $_POST['annee']);
                  $form['csv_file'] = array('#type' => 'hidden', '#value' => $_POST['csv_file']);
                  $form['chemin'] = array('#type' => 'hidden', '#value' => $form_state['storage']['uri']);
                  $form['actions']['submit'] = array(
                    '#type' => 'submit',
                    '#value' => $yes,
                    '#attributes' => array('class' => array('button button--primary js-form-submit form-submit btn-success btn'),),
            	    '#submit' => array('csv_import_cnaps_01_submit'),
                  );  
                  $form['#attached']['css'] = array(
                      drupal_get_path('module', 'siit_importation_cnaps_01') . '/css/cnaps.css'
                  );
                  return $form;
            }
            else csv_import_cnaps_01_submit($form, $form_state);
        }
	

	
}

function get_siit_importation_cnaps_01_form($form, &$form_state){

	drupal_set_title(t('Formulaire CNAPS'));
	
	$options = optionYear();
	$form['annee'] = array(
	    "#type" => "select",      
	    "#title" => t("Année :"),
	    "#options" => $options,
	    //"#default_value" => $settings[""],
	    "#required" => TRUE,
		);
	
	$form['importation']["template"] = array(
	    "#markup" => "Cliquez ici pour télécharger un exemple de <a href='sites/default/files/templates/SIIT_CNAPS.xlsx' target='_blank'>template</a>",      
	    );	
	
	$form['importation']['csv_file'] = array(
	        '#title' => 'Importer Fichier :', // Titre dans la page d'importation du fichier
	        '#description' => 'Seuls ces fichiers xlsx sont valides.',
	        '#type' => 'managed_file',
	        '#required' => TRUE,
	        '#upload_validators' => array(
	         'file_validate_extensions' => array("xlsx"),
	        ),
	    );
	    
	 $form['importation']['submit'] = array(
	        '#type' => 'submit',
	        '#value' => t('Process'),
	        '#attributes' => array('class' => array('button button--primary js-form-submit form-submit btn-success btn'),),
			'#validate' => array('csv_import_cnaps_01_validate'),
	    	'#submit' => array('csv_import_cnaps_01_submit'),
	    );

	    
	    
	$form['importation']['back'] = array('#type' => 'submit', '#value' => t('Retour'));
    $form['importation']['back']['#submit'] = array('siit_back_submit');
    $form['importation']['back']['#limit_validation_errors'] = array();
    $form['importation']['back']['#name'] = 'back';

	$form['#attributes']['class'][] = 'import-form';
	
	return $form;

}

function csv_import_cnaps_01_validate($form, &$form_state){

	$region="";
	$li_etablissement;
	$nationaux;
	$etrangers ;
	$row_begin =0 ;
	$col_begin=0;
	$cell_="";
	
	
	if(!empty($_POST['annee'])){
		//Controle si un import validé existe déjà
		list($id_importation,$question) = searchDataExist(ENTITE_CNAPS01, $_POST['annee'], 0, STATUT_VALIDE, false);
	}
		
	
	// Récupération du fichier 
	if($form_state['values']['csv_file']){	
		$file = file_load($form_state['values']['csv_file']);
		$uri = $file->uri;
		$path = drupal_realpath($uri);
		try {
			$inputFileType = PHPExcel_IOFactory::identify($path);	
			$objReader = PHPExcel_IOFactory::createReader($inputFileType);		
			$objPHPExcel = $objReader->load($path);				
		} catch (Exception $e) {}
		
					
		
		//Test champs
		foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
		   
			$highestRow         = $worksheet->getHighestRow(); 
			$highestColumn      = $worksheet->getHighestColumn(); 
			$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
			
			
			if ($highestColumnIndex == 8){
				//Demande apres la formation de rajouter l'année
				form_set_error('edit-annee', t("L'année des données doit être indiquée en celulle I1."));
				return;
			}
			
			//drupal_set_message(t($highestRow."ligne ".$highestColumnIndex), $type = '', $repeat = FALSE);
			
			for ($row = 1; $row <= $highestRow; ++ $row) {
				for ($col = 0; $col < $highestColumnIndex; ++ $col) {   
					
					$cell = $worksheet->getCellByColumnAndRow($col, $row)->getValue();
					if($row == 1 && $col == 0){
						//Vérifie la conformité du fichier
						if(trim(strtolower($cell)) == trim(strtolower("EMPLOYEUR NOM"))){
						  $row_begin = $row;
						  $col_begin = $col;
						  //drupal_set_message(t("row_begin=".$row_begin." col_begin=".$col_begin ), $type = '', $repeat = FALSE);
						}else if( trim(strtolower($cell)) != trim(strtolower("EMPLOYEUR NOM"))){
							form_set_error('edit-debut', t("Fichier non conforme."));
							return;
						}
					}
					
					if($row == 1 && $col == 8){
						$val = strtolower($cell);
						if (!$val) {
							if (empty($val)) {
								//L'année doit être positionnée dans cette cellule
								form_set_error('edit-annee', t("L'année des données doit être indiquée en celulle I1."));
								return;
							}
						}
						
					}
					if($row == 1 && $col == 8 && strtolower($cell)){
						controle_error_int('edit-annee'.$row, $cell, $row, $col, "L'année");
					}
					
					if($row == 1 && $col == 8 && intVal($cell) != $_POST['annee']){
						form_set_error('edit-annee', t("L'année des données ne correspond pas à celle sélectionnée dans le formulaire."));
						return;
					}
					
					if($row > $row_begin && $row_begin>0){//get_value
						//drupal_set_message(t("Valeur =".$cell->getValue()." row=".$row."col=".$col), $type = '', $repeat = FALSE);
						$cell = $worksheet->getCellByColumnAndRow($col, $row);
						if($col == 0){	
						    $li_enseigne = $cell->getValue();
						    if( empty($li_enseigne)){
								form_set_error('edit-etab'.$row, t("Le champs 'Nom Employeur' est vide. (".getCellule($row, $col).")"));
							}
						}else						
						if($col == $col_begin+2){	
							$cell_ = $worksheet->getCellByColumnAndRow(0, $row)->getValue();
							if($cell_ == "TOTAL") break;
							
							$region  = $cell->getValue();							
							//Traitement region caractere speciaux		
							$region = manage_region($region);
														
							$id_region = get_id_region($region);
								
                            if($id_region==0){
								form_set_error('edit-region'.$row, t("La région '$region' n'existe pas en base. (".getCellule($row, $col).")"));
							}							
						}else
						if($col == $col_begin+5){
							
							$cell_ = $worksheet->getCellByColumnAndRow(0, $row)->getValue();
							
							if($cell_ == "TOTAL") break;
							
							else{
								$nationaux = $cell->getValue()=="" ? 0 : $cell->getValue();
								controle_error_int('edit-nb-total'.$row, $nationaux, $row, $col, "Le nombre de personnels nationaux");
						
							}							
						} else
						if($col == $col_begin+6){	
							$cell_ = $worksheet->getCellByColumnAndRow(0, $row)->getValue();
							if($cell_ == "TOTAL") break;
							else{
								$etrangers = $cell->getValue()=="" ? 0 : $cell->getValue();
								controle_error_int('edit-nbetr'.$row, $etrangers ,$row, $col, "Le nombre de personnels etrangers");
							}					
						} 			
						//drupal_set_message(t('Set :'.$data['region'].$data['cat'].$data['mois_annee']), $type = '', $repeat = FALSE);		
					}	
				}
				if($cell_ == "TOTAL") break;
			}
			break;
		}
	}
}


function csv_import_cnaps_01_submit($form, &$form_state){

	if(!isset($form_state['storage']['confirm'])) {
			
		list($id_importation,$question) = searchDataExist(ENTITE_CNAPS01, $_POST['annee'],0, STATUT_VALIDE, true) ;
		
        if($id_importation){
            $form_state['storage']['confirm'] = TRUE;
            $form_state['rebuild'] = TRUE;
            $form_state['storage']['csv_file'] = $form_state['values']['csv_file'];
            $file = file_load($form_state['values']['csv_file']);
            $form_state['storage']['uri'] = $file->uri;
        } else {
            $file = file_load($form_state['values']['csv_file']);
            traitement_cnaps01($file->uri,$form_state);
        }
    } else {
        if(isset($_POST["chemin"])) $chemin = $_POST["chemin"];
        else{
            $file = file_load($form_state['values']['csv_file']);
            $chemin = $file->uri;
        }
        traitement_cnaps01($chemin,$form_state);
    }

}


function traitement_cnaps01($chemin, &$form_state){
			
			
	// Récupération du fichier  
	if($form_state['values']['csv_file']){
				
			$path = drupal_realpath($chemin);
			try {
			
				$inputFileType = PHPExcel_IOFactory::identify($path);	
				$objReader = PHPExcel_IOFactory::createReader($inputFileType);		
				$objPHPExcel = $objReader->load($path);				
				
			} catch (Exception $e) {
				
			}
			
			//INSERTION siit_importation		
			// rechercher importation avec dt_import et li_fichier et id_type_fichier
			$data_import = array();
			//recup année list	
			$annee  = $form_state['values']['annee'];
		
			$name_file = basename($path);
						
			$data_import['annee'] = $annee;
			$data_import['id_mois'] = 0;
			$data_import["li_fichier"] = basename($path);
			$data_import["id_statut"] = STATUT_AVALIDER;
			$data_import["id_type_fichier"] = TYPE_FICHIER_CNAPS01;
				
			//On supprime l'importation existante pour l'équivalent
			controleDoublonImportation($annee, 0,ENTITE_CNAPS01);
			$id_importation = insert_importation($data_import);
			
			$data = array();
			$region="";
			$li_etablissement = "";
			$id_etablissement = 0;
			$nationaux;
			$etrangers;
			$row_begin =0; 
			$col_begin=0;
			$cell_="";
			
			foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
			   
				$highestRow         = $worksheet->getHighestRow(); 
				$highestColumn      = $worksheet->getHighestColumn(); 
				$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
				
				//drupal_set_message(t($highestRow."ligne ".$highestColumnIndex), $type = '', $repeat = FALSE);
				
				for ($row = 2; $row <= $highestRow; ++ $row) {
					for ($col = 0; $col < $highestColumnIndex; ++ $col) {   
						
						//reperer colonne EMPLOYEUR
							$cell = $worksheet->getCellByColumnAndRow($col, $row);
							if($col == 0){
								//si id_etablissement = 0 donc etablissement non existant à creer on met la valeur li_etablissement 
								//sinon id_etablissement non vide on met li_etablissement à vide
								if(strpos(trim(strtolower($cell->getValue())),'total') !== false){	
									$li_etablissement = $cell->getValue();
								    break;
								}else {
									$li_etablissement = $cell->getValue();
								}
                            }else if($col == 1){	
    							$li_activite_etablissement  = $cell->getValue();							
    							$id_activite_etablissement = get_id_activite_etablissement($li_activite_etablissement, 'CNAPS', $li_etablissement);	
                            }else if($col == 2){
								$region  = $cell->getValue();
								//Traitement region caractere speciaux																																					
								$region = manage_region($region);															
								$id_region = get_id_region($region);	
							}else if($col == 5){
								$nationaux = $cell->getValue();		
							} else if($col == 6){	
								$etrangers = $cell->getValue();		
							} 			
					}
					
					if($li_etablissement!="TOTAL" && ($li_etablissement!="" || $id_etablissement!=0)  &&  $annee!="" && $region!=""){
						//drupal_set_message(t("Set data:  ($li_etablissement, $id_etablissement) | $region | annee $annee"), $type = '', $repeat = true);
						$data[] = array(	
							'id_etablissement' =>  $id_etablissement,
							'li_etablissement' =>  $li_etablissement,
                            'id_activite_etablissement' =>  $id_activite_etablissement,						
							'id_region' =>  $id_region,														
							'annee' => $annee,
                            'is_cnaps' => 1,
							'nbr_emplois_nationaux' => $nationaux,
							'nbr_emplois_etrangers' => $etrangers,
							'id_importation' => $id_importation,);
							
					}			
				}	
			}
			
			//UPDATE AND SAVE	 	
			// INSERTION siit_etablissement et siit_employes	

			foreach ($data as $value) {		
				list($id_etablissement, $annee_etablissement, $is_cnaps, $is_edbm, $is_ontm) = get_id_etablissement($value);
				
				if(!empty($value["li_etablissement"]) && empty($id_etablissement)) {
					$id_etablissement = import_data_etablissement($value);
				} else {
					//On va mettre à jour si les données de l'année dans siit_etablissement
					// est inférieure ou égale à celle qu'on importe
					if ($annee >= $annee_etablissement && !empty($id_etablissement)) {
						update_etablissement($value, $id_etablissement);
					}
				}

				//On va insérer les données employées de l'année
				import_data_cnaps_01($value, $id_etablissement);
				
			}
		
			drupal_set_message("L'import a été effectué avec succès.", $type = 'status');
			$form_state['redirect'] ="siit_importation_fusion_etablissement";
	}				
}

function update_etablissement($value, $id_etablissement) {
	//On met à jour le nb d'emploies et l'année dans la table des établissements
	$data = array();
	$data["annee"] = $value["annee"];
	$data["nb_emplois_nationaux"] = $value["nbr_emplois_nationaux"] ? intVal($value["nbr_emplois_nationaux"]):0;
	$data["nb_emplois_etrangers"] = $value["nbr_emplois_etrangers"] ? intVal($value["nbr_emplois_etrangers"]):0;
	$data["is_cnaps"] = '1';
	$query = db_update('siit_etablissement')
        ->condition('id_etablissement', $id_etablissement);
    $query
      ->fields($data)
      ->execute();
}

function manage_region($lib_region){

	if($lib_region == "ATSIMO ATSINANANA")  $lib_region = "Atsimo-Atsinanana";
	else if($lib_region == "ATSIMO ANDREFANA")  $lib_region = "Atsimo-Andrefana";
	else if($lib_region == "VATOVAVY FITOVINANY")  $lib_region = "Vatovavy-Fitovinany";
	else if($lib_region == "ALAOTRA MANGORO")  $lib_region = "Alaotra-Mangoro";
	else if($lib_region == "AMORON'I MANIA")  $lib_region = "Amoron'i Mania";
	
	return $lib_region;
}

function import_data_cnaps_01($value, $id_etablissement){
       
        db_insert('siit_employes')
				->fields(array('id_etablissement', 'annee', 'nbr_emplois_nationaux',
				'nbr_emplois_etrangers', 'id_importation'))
				->values(array(
					'id_etablissement' => $id_etablissement,
					'annee' => $value["annee"],
                    'nbr_emplois_nationaux' => $value["nbr_emplois_nationaux"] ? intVal($value["nbr_emplois_nationaux"]):0,	           					
					'nbr_emplois_etrangers' => $value["nbr_emplois_etrangers"] ? intVal($value["nbr_emplois_etrangers"]):0,
					'id_importation' => $value["id_importation"],  
				))
		->execute();
  
}


function import_data_etablissement($value){
    
     $id_etab = db_insert('siit_etablissement')
				->fields(array('li_etablissement', 'li_enseigne', 'id_region', 'li_adresse', 'nb_emplois_nationaux', 'nb_emplois_etrangers',
				'id_activite_etablissement','mt_investissement', 'dt_autorisation', 'num_autorisation', 'nb_chambres', 'nb_lits', 'nb_places_repas',
				'fixe',	'mobile', 'email' ,'website','annee',
				'id_nationalite_promoteur', 'id_classement_etablissement', 'is_cnaps', 'id_importation'))
				->values(array(
					'li_etablissement' => trim($value["li_etablissement"]),
					'li_enseigne' => trim($value["li_etablissement"]),
					'id_region' => $value["id_region"],
					'li_adresse' => "",
					'id_activite_etablissement' => $value["id_activite_etablissement"],
					'mt_investissement' => 0,
					'num_autorisation' => 0,
					'dt_autorisation' => '2015-01-01',
					'id_nationalite_promoteur' => 134,
					'id_classement_etablissement' => 11,
					'is_cnaps' => $value["is_cnaps"],
					'nb_chambres' => 4,
                    'nb_lits' => 4,
					'nb_places_repas' => 0,
					'fixe' => '',
					'mobile' => '',
					'email' => '',
					'website' => '',
					'annee' => intVal($value["annee"]),
					'nb_emplois_nationaux' => $value["nbr_emplois_nationaux"] ? intVal($value["nbr_emplois_nationaux"]):0,	           					
					'nb_emplois_etrangers' => $value["nbr_emplois_etrangers"] ? intVal($value["nbr_emplois_etrangers"]):0,
					'id_importation' => $value["id_importation"],					
				))
			->execute();
	return 	 $id_etab;	
}




